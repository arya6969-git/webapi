{"ast":null,"code":"var _jsxFileName = \"/home/banish/Blogapp-using-MERN/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'jquery/dist/jquery.js';\nsetInterval(async () => {\n  axios.get(\"http://localhost:3002\").then(data => {\n    console.log(data);\n  }).catch(e => {\n    console.log(e.response);\n  });\n}, 60 * 1000); //axios.defaults.baseURL = 'http://localhost:3001/api';\n\naxios.defaults.baseURL = 'https://zany-periodic-fisherman.glitch.me/api';\nlet userData = JSON.parse(localStorage.getItem(\"userData\"));\nlet token;\n\nif (userData) {\n  token = userData.token;\n} //axios.defaults.headers.common['Authorization'] = {'Authorization': `Bearer ${token}`};\n\n\naxios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.interceptors.request.use(request => {\n  //    console.log(request)\n  // Edit request config\n  return request;\n}, error => {\n  //  console.log(error);\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  // Edit response config\n  //console.log(response);\n  return response;\n}, error => {\n  console.log(error.response);\n  return Promise.reject(error);\n});\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/banish/Blogapp-using-MERN/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","axios","setInterval","get","then","data","console","log","catch","e","response","defaults","baseURL","userData","JSON","parse","localStorage","getItem","token","headers","common","post","interceptors","request","use","error","Promise","reject","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,kCAAP;AAEA,OAAO,uBAAP;AACAC,WAAW,CAAC,YAAY;AACtBD,EAAAA,KAAK,CAACE,GAAN,CAAU,uBAAV,EAAmCC,IAAnC,CAAwCC,IAAI,IAAE;AAC9CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFC,EAGDG,KAHC,CAGKC,CAAC,IAAE;AACRH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACC,QAAd;AACD,GALC;AAMD,CAPU,EAOT,KAAK,IAPI,CAAX,C,CAUA;;AACAT,KAAK,CAACU,QAAN,CAAeC,OAAf,GAAyB,+CAAzB;AACI,IAAIC,QAAQ,GAAIC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAhB;AACA,IAAIC,KAAJ;;AACA,IAAGL,QAAH,EAAY;AACRK,EAAAA,KAAK,GAAEL,QAAQ,CAACK,KAAhB;AACH,C,CAED;;;AACAjB,KAAK,CAACU,QAAN,CAAeQ,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAASF,KAAM,EAAjE;AACAjB,KAAK,CAACU,QAAN,CAAeQ,OAAf,CAAuBE,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C;AAEApB,KAAK,CAACqB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BD,OAAO,IAAI;AAC1C;AAEI;AACA,SAAOA,OAAP;AACH,CALD,EAKGE,KAAK,IAAI;AACV;AACE,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CARD;AAUAxB,KAAK,CAACqB,YAAN,CAAmBZ,QAAnB,CAA4Bc,GAA5B,CAAgCd,QAAQ,IAAI;AACxC;AACA;AACA,SAAOA,QAAP;AACH,CAJD,EAIGe,KAAK,IAAI;AACRnB,EAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAK,CAACf,QAAlB;AACA,SAAOgB,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPD;AAYJ3B,QAAQ,CAAC8B,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAMEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACA9B,aAAa,CAAC+B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\n\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport 'jquery/dist/jquery.js';\nsetInterval(async () => {\n  axios.get(\"http://localhost:3002\").then(data=>{\n  console.log(data)\n})\n.catch(e=>{\n  console.log(e.response)\n})\n},60 * 1000)\n\n\n//axios.defaults.baseURL = 'http://localhost:3001/api';\naxios.defaults.baseURL = 'https://zany-periodic-fisherman.glitch.me/api';\n    let userData =  JSON.parse(localStorage.getItem(\"userData\"))\n    let token\n    if(userData){\n        token= userData.token\n    }\n    \n    //axios.defaults.headers.common['Authorization'] = {'Authorization': `Bearer ${token}`};\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    axios.defaults.headers.post['Content-Type'] = 'application/json';\n\n    axios.interceptors.request.use(request => {     \n    //    console.log(request)\n        \n        // Edit request config\n        return request;\n    }, error => {\n      //  console.log(error);\n        return Promise.reject(error);\n    });\n\n    axios.interceptors.response.use(response => {\n        // Edit response config\n        //console.log(response);\n        return response;\n    }, error => {\n        console.log(error.response);\n        return Promise.reject(error);\n    });\n    \n\n    \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}