{"ast":null,"code":"var _jsxFileName = \"/home/banish/Blogapp-using-MERN/src/Components/Auth/Auth.js\";\nimport Axios from 'axios';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport validateForm from '../../utils/validateform';\nimport validEmailRegex from '../../utils/emailRegex';\nimport './Auth.css';\nimport { AuthContext } from '../../context/auth-context';\nimport Spinner from '../../Containers/Spinner/Spinner';\nexport class Auth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mySubmitHandler = event => {\n      this.setState(pre => ({\n        isloading: true\n      }));\n      const auth = this.context;\n      event.preventDefault();\n\n      if (validateForm(this.state.errors)) {} else {}\n\n      if (this.state.isLoginMode) {\n        Axios.post('/user/login', this.state.user).then(response => {\n          this.setState(pre => ({\n            isloading: false\n          }));\n          this.props.history.push('/');\n          auth.login(response.data.userId, response.data.token);\n          return Axios.get('/profile/viewprofile');\n        }).then(data => {\n          let profile = data.data.profile.username;\n          localStorage.setItem('profileData', JSON.stringify({\n            \"username\": profile\n          }));\n        }).catch(e => {\n          this.setState({\n            isloading: false,\n            error: { ...this.state.error,\n              message: e.response.data.message,\n              code: e.response.status\n            }\n          });\n        });\n      } else {\n        this.setState(pre => ({\n          isloading: true\n        }));\n        Axios.post('http://localhost:3001/user/signup', this.state.user).then(response => {\n          this.setState(pre => ({\n            isloading: false\n          }));\n        }).catch(e => {\n          this.setState({\n            error: true\n          });\n        });\n      }\n\n      this.setState({\n        user: { ...this.state.user,\n          email: '',\n          password: ''\n        }\n      });\n    };\n\n    this.myChangeHandler = event => {\n      let nam = event.target.name;\n      let val = event.target.value;\n      let errors = this.state.errors;\n      const {\n        name,\n        value\n      } = event.target;\n\n      switch (name) {\n        case 'email':\n          if (value.length === 0) {\n            errors.email = value.length < 5 ? 'Email is Required!' : '';\n            break;\n          }\n\n          if (value.length > 0) {\n            errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n            break;\n          }\n\n          break;\n\n        case 'password':\n          if (value.length > 0) {\n            errors.password = value.length < 6 ? 'Password must be 6 characters long!' : '';\n          }\n\n          if (value.length === 0) {\n            errors.password = value.length === 0 ? 'Password is required!' : '';\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        user: { ...this.state.user,\n          [nam]: val\n        }\n      }, () => {});\n    };\n\n    this.switchLoginhandler = () => {\n      this.setState(pre => ({\n        isLoginMode: !pre.isLoginMode\n      }));\n    };\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''\n      },\n      error: {\n        message: '',\n        code: ''\n      },\n      isloading: false,\n      isLoginMode: true,\n      errors: {\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  render() {\n    let isLoading;\n    let iserror;\n\n    if (this.state.isloading) {\n      isLoading = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mar-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }))));\n    }\n\n    if (this.state.error.code) {\n      iserror = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container error container-short\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mar-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }\n      }, \"Error Code - \", this.state.error.code), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }\n      }, \"Error Message - \", this.state.error.message))));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading, iserror, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container container-short py-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"pt-2 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, this.state.isLoginMode ? 'Login ' : 'Sign Up'), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      className: \"pt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, \"Email \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.user.email,\n      className: \"form-control \" + (this.state.errors.email ? 'is-invalid' : ''),\n      placeholder: \"Enter your email\",\n      required: true,\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }), this.state.errors.email.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 51\n      }\n    }, this.state.errors.email))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, \"Password \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.user.password,\n      className: \"form-control \" + (this.state.errors.password ? 'is-invalid' : ''),\n      placeholder: \"Enter your Password\",\n      required: \"required\",\n      \"data-error\": \"Please enter your full name.\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }), this.state.errors.password.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 52\n      }\n    }, this.state.errors.password))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        marginRight: '15px'\n      },\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: this.state.user.email && this.state.user.password && validateForm(this.state.errors) ? '' : 'disabled',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }, this.state.isLoginMode ? 'Login' : 'Sign Up'), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.switchLoginhandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 25\n      }\n    }, \"Switch to \", this.state.isLoginMode ? 'Sign Up' : 'Login', \" \")))));\n  }\n\n}\nAuth.contextType = AuthContext;\nexport default withRouter(Auth);","map":{"version":3,"sources":["/home/banish/Blogapp-using-MERN/src/Components/Auth/Auth.js"],"names":["Axios","React","Component","withRouter","validateForm","validEmailRegex","AuthContext","Spinner","Auth","constructor","props","mySubmitHandler","event","setState","pre","isloading","auth","context","preventDefault","state","errors","isLoginMode","post","user","then","response","history","push","login","data","userId","token","get","profile","username","localStorage","setItem","JSON","stringify","catch","e","error","message","code","status","email","password","myChangeHandler","nam","target","name","val","value","length","test","switchLoginhandler","render","isLoading","iserror","marginRight","contextType"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport validateForm from '../../utils/validateform'\nimport validEmailRegex from '../../utils/emailRegex'\nimport './Auth.css'\nimport { AuthContext } from '../../context/auth-context'\nimport Spinner from '../../Containers/Spinner/Spinner';\nexport class Auth extends Component {\n    static contextType = AuthContext\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            user: {\n                email: '',\n                password: ''\n            },\n            error: {\n                message: '',\n                code: ''\n            },\n            isloading: false,\n            isLoginMode: true,\n\n            errors: {\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n\n    mySubmitHandler = (event) => {\n        this.setState(pre => ({\n            isloading: true\n        }))\n        const auth = this.context\n        event.preventDefault();\n\n        if (validateForm(this.state.errors)) {\n        } else {\n        }\n        if (this.state.isLoginMode) {\n            Axios.post('/user/login', this.state.user)\n                .then(response => {\n                    this.setState(pre => ({\n                        isloading: false\n                    }))\n                    this.props.history.push('/')\n                    auth.login(response.data.userId, response.data.token);\n                    return Axios.get('/profile/viewprofile')\n                }).then(data => {\n                    let profile = data.data.profile.username\n                    localStorage.setItem(\n                        'profileData',\n                        JSON.stringify({\n                            \"username\": profile\n                        }))\n\n\n                }).catch(e => {\n\n                    this.setState({\n                        isloading: false,\n                        error: {\n                            ...this.state.error, message: e.response.data.message,\n                            code: e.response.status\n                        }\n                    });\n                })\n\n        }\n        else {\n            this.setState(pre => ({\n                isloading: true\n            }))\n            Axios.post('http://localhost:3001/user/signup', this.state.user).then(response => {\n                this.setState(pre => ({\n                    isloading: false\n                }))\n            })\n                .catch(e => {\n                    this.setState({ error: true });\n                })\n        }\n        this.setState({\n            user: { ...this.state.user, email: '', password: '' }\n        });\n    }\n\n\n    myChangeHandler = (event) => {\n\n        let nam = event.target.name;\n        let val = event.target.value;\n        let errors = this.state.errors;\n        const { name, value } = event.target;\n        switch (name) {\n\n            case 'email':\n                if (value.length === 0) {\n                    errors.email =\n                        value.length < 5\n                            ? 'Email is Required!'\n                            : '';\n                    break;\n                }\n                if (value.length > 0) {\n                    errors.email =\n                        validEmailRegex.test(value)\n                            ? ''\n                            : 'Email is not valid!';\n                    break;\n                }\n                break;\n            case 'password':\n                if (value.length > 0) {\n                    errors.password =\n                        value.length < 6\n                            ? 'Password must be 6 characters long!'\n                            : '';\n                }\n\n                if (value.length === 0) {\n                    errors.password =\n                        value.length === 0\n                            ? 'Password is required!'\n                            : '';\n                }\n                break;\n            default:\n                break;\n        }\n\n        this.setState({ errors, user: { ...this.state.user, [nam]: val } }, () => {\n        });\n    }\n\n    switchLoginhandler = () => {\n        this.setState(pre => ({\n            isLoginMode: !pre.isLoginMode\n        }))\n    }\n\n    render() {\n        let isLoading\n        let iserror\n\n        if (this.state.isloading) {\n            isLoading = (\n                <>\n                    <div className=\"container loading\">\n                        <div className=\"mar-20\">\n                            <Spinner />\n                        </div>\n                    </div>\n                </>\n            )\n        }\n\n        if (this.state.error.code) {\n            iserror = (\n                <>\n                    <div className=\"container error container-short\">\n                        <div className=\"mar-20\">\n                            <h5>Error Code - {this.state.error.code}</h5>\n                            <h4>Error Message - {this.state.error.message}</h4>\n                        </div>\n                    </div>\n                </>\n            )\n        }\n        return (<>\n\n            {isLoading}\n            {iserror}\n\n            <div className=\"container container-short py-5\">\n                <h1 className=\"pt-2 py-2\">{this.state.isLoginMode ? 'Login ' : 'Sign Up'}</h1>\n                <hr></hr>\n                <form onSubmit={this.mySubmitHandler} className=\"pt-4\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email </label>\n                        <input\n                            type='email'\n                            name='email'\n                            value={this.state.user.email}\n                            className={\"form-control \" + (this.state.errors.email ? 'is-invalid' : '')}\n                            placeholder=\"Enter your email\"\n                            required\n                            onChange={this.myChangeHandler}\n                        />\n                        {this.state.errors.email.length > 0 &&\n                            <div className=\"mt-1\"><span className='error text-danger'>{this.state.errors.email}</span></div>}\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password </label>\n                        <input\n                            type='password'\n                            name='password'\n                            value={this.state.user.password}\n                            className={\"form-control \" + (this.state.errors.password ? 'is-invalid' : '')}\n                            placeholder=\"Enter your Password\"\n                            required=\"required\"\n                            data-error=\"Please enter your full name.\"\n                            onChange={this.myChangeHandler}\n                        />\n                        {this.state.errors.password.length > 0 &&\n                            <div className=\"mt-1\"> <span className='error text-danger'>{this.state.errors.password}</span></div>}\n\n                    </div>\n\n                    <div className=\"form-group\">\n                        <button style={{ marginRight: '15px' }}\n                            type='submit'\n                            className=\"btn btn-primary\"\n                            disabled={this.state.user.email && this.state.user.password\n                                && (validateForm(this.state.errors)) ? '' : 'disabled'}\n                        >\n                            {this.state.isLoginMode ? 'Login' : 'Sign Up'}\n                        </button>\n\n                        <button\n                            type='button'\n                            className=\"btn btn-primary\"\n                            onClick={this.switchLoginhandler}\n                        >Switch to {this.state.isLoginMode ? 'Sign Up' : 'Login'} </button>\n                    </div>\n                </form>\n\n            </div>\n        </>\n        )\n    }\n}\n\nexport default withRouter(Auth)"]},"metadata":{},"sourceType":"module"}