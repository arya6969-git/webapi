{"ast":null,"code":"var _jsxFileName = \"/home/banish/Blogapp-using-MERN/src/Components/Posts/Mypost/Mypost.js\";\nimport Axios from 'axios';\nimport React, { Component } from 'react';\nimport Spinner from '../../../Containers/Spinner/Spinner';\nimport ShowPost from '../ShowPost/ShowPost';\nexport class Mypost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: [],\n      error: {\n        message: '',\n        code: ''\n      },\n      isloading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState(pre => ({\n      isloading: true\n    }));\n    Axios.get(\"/posts/mypost\").then(data => {\n      this.setState({ ...this.state.posts,\n        posts: data.data.posts,\n        isloading: false\n      });\n    }).catch(e => {\n      this.setState({\n        isloading: false,\n        error: { ...this.state.error,\n          message: e.response.data.message,\n          code: e.response.status\n        }\n      });\n    });\n  }\n\n  render() {\n    let isLoading;\n    let iserror;\n\n    if (this.state.isloading) {\n      isLoading = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mar-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      }))));\n    }\n\n    if (this.state.error.code) {\n      iserror = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container error container-short\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mar-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, \"Error Code - \", this.state.error.code), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, \"Error Message - \", this.state.error.message))));\n    }\n\n    let fetchedposts;\n\n    if (this.state.posts) {\n      fetchedposts = this.state.posts.map((post, index) => /*#__PURE__*/React.createElement(ShowPost, Object.assign({\n        key: index\n      }, post, index, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading, iserror, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container hero py-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 col-xs-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, this.state.posts.length === 0 ? /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 65\n      }\n    }, \"No Posts Found\") : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, fetchedposts)))));\n  }\n\n}\nexport default Mypost;","map":{"version":3,"sources":["/home/banish/Blogapp-using-MERN/src/Components/Posts/Mypost/Mypost.js"],"names":["Axios","React","Component","Spinner","ShowPost","Mypost","constructor","props","state","posts","error","message","code","isloading","componentDidMount","setState","pre","get","then","data","catch","e","response","status","render","isLoading","iserror","fetchedposts","map","post","index","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,qCAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAO,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,EADN;AAEHC,QAAAA,IAAI,EAAE;AAFH,OAFE;AAMTC,MAAAA,SAAS,EAAE;AANF,KAAb;AAQH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAcC,GAAG,KAAK;AAClBH,MAAAA,SAAS,EAAE;AADO,KAAL,CAAjB;AAGAb,IAAAA,KAAK,CAACiB,GAAN,CAAU,eAAV,EAA2BC,IAA3B,CAAgCC,IAAI,IAAI;AAEpC,WAAKJ,QAAL,CAAc,EAAE,GAAG,KAAKP,KAAL,CAAWC,KAAhB;AAAuBA,QAAAA,KAAK,EAAEU,IAAI,CAACA,IAAL,CAAUV,KAAxC;AAA+CI,QAAAA,SAAS,EAAE;AAA1D,OAAd;AACH,KAHD,EAGGO,KAHH,CAGSC,CAAC,IAAI;AACV,WAAKN,QAAL,CAAc;AACVF,QAAAA,SAAS,EAAE,KADD;AAEVH,QAAAA,KAAK,EAAE,EACH,GAAG,KAAKF,KAAL,CAAWE,KADX;AACkBC,UAAAA,OAAO,EAAEU,CAAC,CAACC,QAAF,CAAWH,IAAX,CAAgBR,OAD3C;AAEHC,UAAAA,IAAI,EAAES,CAAC,CAACC,QAAF,CAAWC;AAFd;AAFG,OAAd;AAOH,KAXD;AAYH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAJ;AACA,QAAIC,OAAJ;;AAEA,QAAI,KAAKlB,KAAL,CAAWK,SAAf,EAA0B;AACtBY,MAAAA,SAAS,gBACL,uDACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADJ;AASH;;AAED,QAAI,KAAKjB,KAAL,CAAWE,KAAX,CAAiBE,IAArB,EAA2B;AACvBc,MAAAA,OAAO,gBACH,uDACI;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkB,KAAKlB,KAAL,CAAWE,KAAX,CAAiBE,IAAnC,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAqB,KAAKJ,KAAL,CAAWE,KAAX,CAAiBC,OAAtC,CAFJ,CADJ,CADJ,CADJ;AAUH;;AACD,QAAIgB,YAAJ;;AAGA,QAAI,KAAKnB,KAAL,CAAWC,KAAf,EAAsB;AAClBkB,MAAAA,YAAY,GAAG,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBAChC,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA;AAAf,SAA0BD,IAA1B,EAAoCC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADW,CAAf;AAGH;;AACD,wBACI,0CACKL,SADL,EAEKC,OAFL,eAGI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKlB,KAAL,CAAWC,KAAX,CAAiBsB,MAAjB,KAA4B,CAA5B,gBAAgC;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAhC,GAAkF,IAF1F,eAII;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,YADL,CAJJ,CADJ,CADJ,CAHJ,CADJ;AAqBH;;AAzFiC;AA4FtC,eAAetB,MAAf","sourcesContent":["import Axios from 'axios'\nimport React, { Component } from 'react'\nimport Spinner from '../../../Containers/Spinner/Spinner'\nimport ShowPost from '../ShowPost/ShowPost'\n\nexport class Mypost extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            posts: [],\n            error: {\n                message: '',\n                code: ''\n            },\n            isloading: false,\n        }\n    }\n\n    componentDidMount() {\n        this.setState(pre => ({\n            isloading: true\n        }))\n        Axios.get(\"/posts/mypost\").then(data => {\n\n            this.setState({ ...this.state.posts, posts: data.data.posts, isloading: false });\n        }).catch(e => {\n            this.setState({\n                isloading: false,\n                error: {\n                    ...this.state.error, message: e.response.data.message,\n                    code: e.response.status\n                }\n            });\n        })\n    }\n\n    render() {\n        let isLoading\n        let iserror\n\n        if (this.state.isloading) {\n            isLoading = (\n                <>\n                    <div className=\"container loading\">\n                        <div className=\"mar-20\">\n                            <Spinner />\n                        </div>\n                    </div>\n                </>\n            )\n        }\n\n        if (this.state.error.code) {\n            iserror = (\n                <>\n                    <div className=\"container error container-short\">\n                        <div className=\"mar-20\">\n                            <h5>Error Code - {this.state.error.code}</h5>\n                            <h4>Error Message - {this.state.error.message}</h4>\n                        </div>\n                    </div>\n                </>\n            )\n        }\n        let fetchedposts\n\n\n        if (this.state.posts) {\n            fetchedposts = this.state.posts.map((post, index) => (\n                <ShowPost key={index} {...post} {...index} />\n            ))\n        }\n        return (\n            <>\n                {isLoading}\n                {iserror}\n                <div className=\"container hero py-5\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 col-xs-12\">\n                            {\n                                this.state.posts.length === 0 ? <h2 className=\"text-center\">No Posts Found</h2> : null\n                            }\n                            <div className=\"row\">\n                                {fetchedposts}\n                            </div>\n                        </div>\n\n\n                    </div>\n                </div>\n            </>\n\n        )\n    }\n}\n\nexport default Mypost\n"]},"metadata":{},"sourceType":"module"}