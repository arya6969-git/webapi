{"ast":null,"code":"var _jsxFileName = \"/home/banish/Blogapp-using-MERN/src/Components/Users/CreateProfile/CreateProfile.js\";\nimport Axios from 'axios';\nimport React, { Component } from 'react';\nimport ImageUpload from '../../../Containers/ImageUpload/ImageUpload';\nimport Spinner from '../../../Containers/Spinner/Spinner';\nexport class CreatePost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.imageHandler = (id, value, isValid) => {\n      this.setState({\n        Post: { ...this.state.Post,\n          [id]: value\n        }\n      }, () => {});\n    };\n\n    this.myChangeHandler = event => {\n      var _event$target, _event$target2;\n\n      let nam = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.name;\n      let val = (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.value;\n      let errors = this.state.errors;\n      const {\n        name,\n        value\n      } = event.target;\n\n      switch (name) {\n        case 'username':\n          if (value.length > 0) {\n            errors.username = value.length < 6 ? 'Title   must be 5 characters long!' : '';\n          }\n\n          if (value.length === 0) {\n            errors.username = value.length === 0 ? 'username is required!' : '';\n          }\n\n          break;\n\n        case 'bio':\n          if (value.length > 0) {\n            errors.bio = value.length < 20 ? 'Content  must be 20 characters long!' : '';\n          }\n\n          if (value.length === 0) {\n            errors.bio = value.length === 0 ? 'Content is required!' : '';\n          }\n\n          break;\n\n        case 'imagePath':\n          if (value.length === 0) {\n            errors.imagePath = value.length === 0 ? 'Image is required!' : '';\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({ ...errors,\n        Post: { ...this.state.Post,\n          [nam]: val\n        }\n      }, () => {});\n    };\n\n    this.state = {\n      Post: {\n        id: '',\n        username: '',\n        bio: '',\n        imagePath: '',\n        created: ''\n      },\n      error: {\n        message: '',\n        code: ''\n      },\n      isloading: false,\n      haserror: false,\n      errors: {\n        username: '',\n        bio: '',\n        imagePath: ''\n      }\n    };\n    this.mySubmitHandler = this.mySubmitHandler.bind(this);\n    this.myChangeHandler = this.myChangeHandler.bind(this);\n  }\n\n  componentDidMount() {\n    let path = this.props.match.path;\n    let id = this.props.match.params.id;\n\n    if (path === \"/profile/edit/:id\") {\n      this.setState(pre => ({\n        isloading: true\n      }));\n      Axios.get(\"/profile/viewprofile\").then(data => {\n        let post = data.data.profile;\n        this.setState({\n          isloading: false,\n          Post: { ...this.state.Post,\n            id: post._id,\n            username: post.username,\n            bio: post.bio,\n            imagePath: post.imagePath\n          }\n        });\n      }).catch(e => {\n        this.setState({\n          isloading: false,\n          error: { ...this.state.error,\n            message: e.response.data.message,\n            code: e.response.status\n          }\n        });\n      });\n    }\n  }\n\n  mySubmitHandler(e) {\n    this.setState(pre => ({\n      isloading: true\n    }));\n    let path = this.props.match.path;\n    let id = this.props.match.params.id;\n    e.preventDefault();\n    let formData;\n\n    if (typeof this.state.Post.imagePath === \"object\") {\n      formData = new FormData();\n      formData.append('id', this.state.Post.id);\n      formData.append('username', this.state.Post.username);\n      formData.append('bio', this.state.Post.bio);\n      formData.append('image', this.state.Post.imagePath, this.state.Post.username);\n    } else {\n      formData = {\n        \"id\": this.state.Post.id,\n        'username': this.state.Post.username,\n        'bio': this.state.Post.bio,\n        'image': this.state.Post.imagePath\n      };\n    }\n\n    if (path === \"/profile/edit/:id\") {\n      Axios.put(\"/profile/edit/\" + id, formData).then(data => {\n        this.setState(pre => ({\n          isloading: false\n        }));\n        this.props.history.push('/profile');\n      }).catch(e => {\n        this.setState({\n          isloading: false,\n          error: { ...this.state.error,\n            message: e.response.data.message,\n            code: e.response.status\n          }\n        });\n      });\n    } else {\n      Axios.post(\"/profile/create\", formData).then(data => {\n        this.setState(pre => ({\n          isloading: true\n        }));\n        let profile = data.data.profile.username;\n        localStorage.setItem('profileData', JSON.stringify({\n          \"username\": profile\n        }));\n        this.props.history.push('/');\n      }).catch(e => {\n        this.setState({\n          isloading: false,\n          error: { ...this.state.error,\n            message: e.response.data.message,\n            code: e.response.status\n          }\n        });\n      });\n    }\n\n    this.setState({\n      Post: { ...this.state.Post,\n        username: '',\n        bio: '',\n        imagePath: ''\n      }\n    });\n  }\n\n  render() {\n    let isLoading;\n    let iserror;\n\n    if (this.state.isloading) {\n      isLoading = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mar-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }\n      }))));\n    }\n\n    if (this.state.error.code) {\n      iserror = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container error container-short\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mar-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }\n      }, \"Error Code - \", this.state.error.code), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }\n      }, \"Error Message - \", this.state.error.message))));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading, iserror, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container container-short\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.mySubmitHandler,\n      className: \"pt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-center mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, \"Create Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, \"Username \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"username\",\n      name: \"username\",\n      value: this.state.Post.username,\n      className: \"form-control \" + (this.state.errors.username ? 'is-invalid' : ''),\n      placeholder: \"Enter the username\",\n      required: true,\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }), this.state.errors.username.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 51\n      }\n    }, this.state.errors.username))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 25\n      }\n    }, \"Password \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"bio\",\n      rows: \"4\",\n      value: this.state.Post.bio,\n      className: \"form-control \" + (this.state.errors.bio ? 'is-invalid' : ''),\n      placeholder: \"Enter the  description\",\n      required: \"required\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }), this.state.errors.bio.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 51\n      }\n    }, this.state.errors.bio))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, \"Image \"), /*#__PURE__*/React.createElement(ImageUpload, {\n      id: \"imagePath\",\n      name: \"imagePath\",\n      onInput: this.imageHandler,\n      value: this.state.Post.imagePath,\n      errorText: \"Please provide an image.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }), this.state.errors.imagePath.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 51\n      }\n    }, this.state.errors.imagePath))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        marginRight: '15px'\n      },\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: this.state.Post.username && this.state.Post.bio && this.state.Post.imagePath ? '' : 'disabled',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, \"Create Profile\")))));\n  }\n\n}\nexport default CreatePost;","map":{"version":3,"sources":["/home/banish/Blogapp-using-MERN/src/Components/Users/CreateProfile/CreateProfile.js"],"names":["Axios","React","Component","ImageUpload","Spinner","CreatePost","constructor","props","imageHandler","id","value","isValid","setState","Post","state","myChangeHandler","event","nam","target","name","val","errors","length","username","bio","imagePath","created","error","message","code","isloading","haserror","mySubmitHandler","bind","componentDidMount","path","match","params","pre","get","then","data","post","profile","_id","catch","e","response","status","preventDefault","formData","FormData","append","put","history","push","localStorage","setItem","JSON","stringify","render","isLoading","iserror","marginRight"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport React, { Component } from 'react'\nimport ImageUpload from '../../../Containers/ImageUpload/ImageUpload'\nimport Spinner from '../../../Containers/Spinner/Spinner'\nexport class CreatePost extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            Post: {\n                id: '',\n                username: '',\n                bio: '',\n                imagePath: '',\n                created: ''\n            },\n            error: {\n                message: '',\n                code: ''\n            },\n            isloading: false,\n\n            haserror: false,\n            errors: {\n                username: '',\n                bio: '',\n                imagePath: '',\n            }\n        }\n        this.mySubmitHandler = this.mySubmitHandler.bind(this);\n        this.myChangeHandler = this.myChangeHandler.bind(this);\n    }\n\n    componentDidMount() {\n\n        let path = this.props.match.path\n        let id = this.props.match.params.id\n        if (path === \"/profile/edit/:id\") {\n            this.setState(pre => ({\n                isloading: true\n            }))\n            Axios.get(\"/profile/viewprofile\").then(data => {\n                let post = data.data.profile\n                this.setState({\n                    isloading: false,\n                    Post: { ...this.state.Post, id: post._id, username: post.username, bio: post.bio, imagePath: post.imagePath }\n                });\n            })\n                .catch(e => {\n                    this.setState({\n                        isloading: false,\n                        error: {\n                            ...this.state.error, message: e.response.data.message,\n                            code: e.response.status\n                        }\n                    });\n                })\n        }\n    }\n\n    imageHandler = (id, value, isValid) => {\n        this.setState({ Post: { ...this.state.Post, [id]: value } }, () => {\n\n        });\n\n    }\n\n    myChangeHandler = (event) => {\n        let nam = event.target?.name;\n        let val = event.target?.value;\n        let errors = this.state.errors;\n        const { name, value } = event.target;\n        switch (name) {\n\n            case 'username':\n                if (value.length > 0) {\n                    errors.username =\n                        value.length < 6\n                            ? 'Title   must be 5 characters long!'\n                            : '';\n                }\n\n                if (value.length === 0) {\n                    errors.username =\n                        value.length === 0\n                            ? 'username is required!'\n                            : '';\n                }\n                break;\n\n            case 'bio':\n                if (value.length > 0) {\n                    errors.bio =\n                        value.length < 20\n                            ? 'Content  must be 20 characters long!'\n                            : '';\n                }\n\n                if (value.length === 0) {\n                    errors.bio =\n                        value.length === 0\n                            ? 'Content is required!'\n                            : '';\n                }\n                break;\n            case 'imagePath':\n                if (value.length === 0) {\n                    errors.imagePath =\n                        value.length === 0\n                            ? 'Image is required!'\n                            : '';\n                }\n                break;\n            default:\n                break;\n        }\n\n        this.setState({ ...errors, Post: { ...this.state.Post, [nam]: val } }, () => {\n\n        });\n    }\n\n    mySubmitHandler(e) {\n        this.setState(pre => ({\n            isloading: true\n        }))\n        let path = this.props.match.path\n        let id = this.props.match.params.id\n\n        e.preventDefault()\n        let formData;\n        if (typeof (this.state.Post.imagePath) === \"object\") {\n            formData = new FormData();\n            formData.append('id', this.state.Post.id);\n            formData.append('username', this.state.Post.username);\n            formData.append('bio', this.state.Post.bio);\n            formData.append('image', this.state.Post.imagePath, this.state.Post.username);\n\n        }\n        else {\n            formData = {\n                \"id\": this.state.Post.id,\n                'username': this.state.Post.username,\n                'bio': this.state.Post.bio,\n                'image': this.state.Post.imagePath,\n\n            }\n        }\n\n        if (path === \"/profile/edit/:id\") {\n            Axios.put(\"/profile/edit/\" + id, formData).then(data => {\n                this.setState(pre => ({\n                    isloading: false\n                }))\n                this.props.history.push('/profile')\n            })\n                .catch(e => {\n                    this.setState({\n                        isloading: false,\n                        error: {\n                            ...this.state.error, message: e.response.data.message,\n                            code: e.response.status\n                        }\n                    });\n                })\n        }\n        else {\n            Axios.post(\"/profile/create\", formData).then(data => {\n                this.setState(pre => ({\n                    isloading: true\n                }))\n                let profile = data.data.profile.username;\n                localStorage.setItem(\n                    'profileData',\n                    JSON.stringify({\n                        \"username\": profile\n                    }))\n                this.props.history.push('/')\n            }).catch(e => {\n                this.setState({\n                    isloading: false,\n                    error: {\n                        ...this.state.error, message: e.response.data.message,\n                        code: e.response.status\n                    }\n                });\n            })\n        }\n        this.setState({\n            Post: { ...this.state.Post, username: '', bio: '', imagePath: '' }\n        });\n    }\n    render() {\n\n        let isLoading\n        let iserror\n\n        if (this.state.isloading) {\n            isLoading = (\n                <>\n                    <div className=\"container loading\">\n                        <div className=\"mar-20\">\n                            <Spinner />\n                        </div>\n                    </div>\n                </>\n            )\n        }\n\n        if (this.state.error.code) {\n            iserror = (\n                <>\n                    <div className=\"container error container-short\">\n                        <div className=\"mar-20\">\n                            <h5>Error Code - {this.state.error.code}</h5>\n                            <h4>Error Message - {this.state.error.message}</h4>\n                        </div>\n                    </div>\n                </>\n            )\n        }\n\n\n        return (<>\n            {isLoading}\n            {iserror}\n            <div className=\"container container-short\">\n                <form onSubmit={this.mySubmitHandler} className=\"pt-4\">\n                    <h3 className=\"text-center mb-3\">Create Profile</h3>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username </label>\n                        <input\n                            type='username'\n                            name='username'\n                            value={this.state.Post.username}\n                            className={\"form-control \" + (this.state.errors.username ? 'is-invalid' : '')}\n                            placeholder=\"Enter the username\"\n                            required\n                            onChange={this.myChangeHandler}\n                        />\n\n                        {this.state.errors.username.length > 0 &&\n                            <div className=\"mt-1\"><span className='error text-danger'>{this.state.errors.username}</span></div>}\n\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password </label>\n                        <textarea\n                            type='text'\n                            name='bio'\n                            rows=\"4\"\n                            value={this.state.Post.bio}\n                            className={\"form-control \" + (this.state.errors.bio ? 'is-invalid' : '')}\n                            placeholder=\"Enter the  description\"\n                            required=\"required\"\n                            onChange={this.myChangeHandler}\n                        />\n\n                        {this.state.errors.bio.length > 0 &&\n                            <div className=\"mt-1\"><span className='error text-danger'>{this.state.errors.bio}</span></div>}\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Image </label>\n                        <ImageUpload\n                            id=\"imagePath\"\n                            name=\"imagePath\"\n                            onInput={this.imageHandler}\n                            value={this.state.Post.imagePath}\n                            errorText=\"Please provide an image.\"\n                        />\n                        {this.state.errors.imagePath.length > 0 &&\n                            <div className=\"mt-1\"><span className='error text-danger'>{this.state.errors.imagePath}</span></div>}\n                    </div>\n                    <div className=\"form-group\">\n                        <button style={{ marginRight: '15px' }}\n                            type='submit'\n                            className=\"btn btn-primary\"\n                            disabled={this.state.Post.username && this.state.Post.bio && this.state.Post.imagePath\n                                ? '' : 'disabled'}\n                        >\n                            Create Profile\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </>\n        )\n    }\n}\n\nexport default CreatePost\n"]},"metadata":{},"sourceType":"module"}